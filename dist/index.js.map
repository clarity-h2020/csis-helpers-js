{"version":3,"file":"index.js","sources":["../src/lib/CSISRemoteHelpers.js","../src/lib/EMIKATHelpers.js","../node_modules/wicket/wicket.js","../src/lib/CSISHelpers.js"],"sourcesContent":["import log from 'loglevel';\r\nimport axios from 'axios';\r\n\r\nexport const csisClient = axios.create({ credentials: 'include' });\r\ncsisClient.defaults.headers.common['Accept'] = 'application/vnd.api+json';\r\ncsisClient.defaults.headers.common['Content-Type'] = 'application/vnd.api+json';\r\n\r\n/**\r\n * Get the X-CSRF Token from the CSIS API. Usually needed only for PUT, POST and PATCH requests.\r\n * \r\n * @param {String} csisBaseUrl \r\n */\r\nexport const getXCsrfToken = async function (csisBaseUrl = 'https://csis.myclimateservice.eu') {\r\n  const apiResponse = await csisClient.get(csisBaseUrl + \"/rest/session/token\");\r\n  // introduce ugly side effect:\r\n  csisClient.defaults.headers.post['X-CSRF-Token'] = apiResponse.data;\r\n  return apiResponse.data;\r\n}\r\n\r\n/**\r\n* Gets EMIKAT Credentials from Drupal JSON API and return a headers object\r\n* ready to be used with axios.\r\n*\r\n* @param {String} csisBaseUrl\r\n* @return {Promise<Object>}\r\n*/\r\nexport const getEmikatCredentialsFromCsis = async function (csisBaseUrl = 'https://csis.myclimateservice.eu') {\r\n\r\n  try {\r\n    const apiResponse = await csisClient.get(csisBaseUrl + '/jsonapi', { credentials: 'include' });\r\n    const userResponse = await csisClient.get(apiResponse.data.meta.links.me.href, { credentials: 'include' });\r\n\r\n    if (userResponse.data.data.attributes.field_basic_auth_credentials) {\r\n      // const header = {'Authorization' : 'Basic ' + btoa(userResponse.data.data.attributes.field_basic_auth_credentials)};\r\n      // return header;\r\n      return 'Basic ' + btoa(userResponse.data.data.attributes.field_basic_auth_credentials);\r\n    } else {\r\n      log.error('no field field_basic_auth_credentials in user profile ' + userResponse.data.data.attributes.name);\r\n      return null;\r\n    }\r\n  }\r\n  catch (error) {\r\n    console.error(`could not fetch emikat credentials from $csisBaseUrl`, error);\r\n    // return null;\r\n    throw error;\r\n  }\r\n}\r\n\r\n/**\r\n* Gets the Study Node  from Drupal JSON API\r\n*\r\n* @param {String} studyUuid\r\n* @param {String} [include ]\r\n* @param {String} [csisBaseUrl]\r\n* @return {Object}\r\n*/\r\nexport const getStudyGroupNodeFromCsis = async function (\r\n  studyUuid,\r\n  include = 'field_data_package,field_data_package.field_resources,field_data_package.field_resources.field_resource_tags,field_data_package.field_resources.field_references',\r\n  csisBaseUrl = 'https://csis.myclimateservice.eu', ) {\r\n\r\n  const requestUrl = csisBaseUrl + '/jsonapi/group/study/' + studyUuid + '?include=' + include;\r\n\r\n  try {\r\n    log.debug('fetching study from CSOS API:' + requestUrl);\r\n\r\n    const apiResponse = await csisClient.get(requestUrl, { credentials: 'include' });\r\n    return apiResponse.data;\r\n  }\r\n  catch (error) {\r\n    console.error(`could not fetch study from ${requestUrl}`, error);\r\n    throw error;\r\n  }\r\n}","/* \r\n * ***************************************************\r\n * \r\n * cismet GmbH, Saarbruecken, Germany\r\n * \r\n *               ... and it just works.\r\n * \r\n * ***************************************************\r\n */\r\n\r\nimport axios from 'axios';\r\n\r\nexport const EMIKAT_STUDY_ID = '$emikat_id';\r\n\r\nconst emikatClient = axios.create();\r\n\r\n/**\r\n * \r\n * @param {String} url\r\n * @param {String} emikatCredentials\r\n * @throws\r\n */\r\nexport async function fetchData(url, emikatCredentials) {\r\n  try {\r\n\r\n    console.log('fetching from EMIKAT:' + url);\r\n\r\n    const response = await emikatClient.get(url, { headers: { Authorization: emikatCredentials } });\r\n\r\n    // we *could* do once:  \r\n    // emikatClient.defaults.headers.common['Authorization'] = emikatCredentials;\r\n    // but that would break functional code as it has side effects on the emikatClient instance.\r\n\r\n    return response;\r\n\r\n  } catch (e) {\r\n    console.error('could not fetch EMIKAT data from ' + url, e);\r\n    throw e;\r\n  }\r\n};\r\n\r\n/**\r\n * \r\n * @param {*} url \r\n * @param {*} authString \r\n * @deprecated\r\n */\r\nexport async function fetchUsers(url, authString) {\r\n  try {\r\n    console.log('fetching from:' + url);\r\n    const response = await emikatClient.get(url, { headers: { Authorization: authString } });\r\n\r\n    // we *could* do once:  \r\n    emikatClient.defaults.headers.common['Authorization'] = authString;\r\n    // but that would break functional code as it has side effects on the emikatClient instance.\r\n\r\n    //console.log(JSON.stringify(response));\r\n    return response;\r\n\r\n  } catch (e) {\r\n    console.error(e);\r\n    throw e;\r\n  }\r\n};\r\n\r\n/**\r\n * Replaces EMIKAT_STUDY_ID with the actual study id.\r\n * Note: We *could* use template strings in a fixed URL,  e.g.\r\n * `https://service.emikat.at/EmiKatTst/api/scenarios/${emikat_id}/feature/view.2812/table/data`\r\n * However, this has to many drawbacks\r\n * \r\n * @param {string} urlTemplate \r\n * @param {number} emikatId \r\n */\r\nexport function addEmikatId(urlTemplate, emikatId) {\r\n  let url = urlTemplate.replace(EMIKAT_STUDY_ID, emikatId);\r\n  return url;\r\n}\r\n\r\n/**\r\n * Generates a simple column definition for ReactTable from EMIKAT tabular Data\r\n * \r\n * @param {Object[]} columns \r\n * @return {Object[]}\r\n */\r\nexport function generateColumns(columnnames) {\r\n\r\n  // add parentheses around the entire body `({})` to force the parser to treat the object literal \r\n  // as an expression so that it's not treated as a block statement.\r\n  return columnnames.map((columnname, index) => ({\r\n    id: columnname, // Required because our accessor is not a string\r\n    Header: columnname,\r\n    accessor: row => row.values[index] // Custom value accessors!\r\n  }));\r\n}\r\n\r\n\r\nexport function sum(a, b) {\r\n  return a + b;\r\n}\r\n\r\n\r\n/**\r\n * We can either use \"import EMIKATHelpers from './EMIKATHelpers.js'\" and call  \"EMIKATHelpers.getIncludedObject(...)\" or\r\n * \"import {getIncludedObject} from './EMIKATHelpers.js'\" and call \"getIncludedObject(...)\".\r\n */","/** @license\n *\n *  Copyright (C) 2012 K. Arthur Endsley (kaendsle@mtu.edu)\n *  Michigan Tech Research Institute (MTRI)\n *  3600 Green Court, Suite 100, Ann Arbor, MI, 48105\n *\n *  This program is free software: you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\n(function (root, factory) {\n\n    if (typeof define === \"function\" && define.amd) {\n        // AMD (+ global for extensions)\n        define(function () {\n            return factory();\n        });\n    } else if (typeof module !== 'undefined' && typeof exports === \"object\") {\n        // CommonJS\n        module.exports = factory();\n    } else {\n        // Browser\n        root.Wkt = factory();\n    }\n}(this, function () {\n\n\n    var beginsWith, endsWith, root, Wkt;\n\n    // Establish the root object, window in the browser, or exports on the server\n    root = this;\n\n    /**\n     * @desc The Wkt namespace.\n     * @property    {String}    delimiter   - The default delimiter for separating components of atomic geometry (coordinates)\n     * @namespace\n     * @global\n     */\n    Wkt = function (obj) {\n        if (obj instanceof Wkt) return obj;\n        if (!(this instanceof Wkt)) return new Wkt(obj);\n        this._wrapped = obj;\n    };\n\n\n\n    /**\n     * Returns true if the substring is found at the beginning of the string.\n     * @param   str {String}    The String to search\n     * @param   sub {String}    The substring of interest\n     * @return      {Boolean}\n     * @private\n     */\n    beginsWith = function (str, sub) {\n        return str.substring(0, sub.length) === sub;\n    };\n\n    /**\n     * Returns true if the substring is found at the end of the string.\n     * @param   str {String}    The String to search\n     * @param   sub {String}    The substring of interest\n     * @return      {Boolean}\n     * @private\n     */\n    endsWith = function (str, sub) {\n        return str.substring(str.length - sub.length) === sub;\n    };\n\n    /**\n     * The default delimiter for separating components of atomic geometry (coordinates)\n     * @ignore\n     */\n    Wkt.delimiter = ' ';\n\n    /**\n     * Determines whether or not the passed Object is an Array.\n     * @param   obj {Object}    The Object in question\n     * @return      {Boolean}\n     * @member Wkt.isArray\n     * @method\n     */\n    Wkt.isArray = function (obj) {\n        return !!(obj && obj.constructor === Array);\n    };\n\n    /**\n     * Removes given character String(s) from a String.\n     * @param   str {String}    The String to search\n     * @param   sub {String}    The String character(s) to trim\n     * @return      {String}    The trimmed string\n     * @member Wkt.trim\n     * @method\n     */\n    Wkt.trim = function (str, sub) {\n        sub = sub || ' '; // Defaults to trimming spaces\n        // Trim beginning spaces\n        while (beginsWith(str, sub)) {\n            str = str.substring(1);\n        }\n        // Trim ending spaces\n        while (endsWith(str, sub)) {\n            str = str.substring(0, str.length - 1);\n        }\n        return str;\n    };\n\n    /**\n     * An object for reading WKT strings and writing geographic features\n     * @constructor this.Wkt.Wkt\n     * @param   initializer {String}    An optional WKT string for immediate read\n     * @property            {Array}     components      - Holder for atomic geometry objects (internal representation of geometric components)\n     * @property            {String}    delimiter       - The default delimiter for separating components of atomic geometry (coordinates)\n     * @property            {Object}    regExes         - Some regular expressions copied from OpenLayers.Format.WKT.js\n     * @property            {String}    type            - The Well-Known Text name (e.g. 'point') of the geometry\n     * @property            {Boolean}   wrapVerticies   - True to wrap vertices in MULTIPOINT geometries; If true: MULTIPOINT((30 10),(10 30),(40 40)); If false: MULTIPOINT(30 10,10 30,40 40)\n     * @return              {this.Wkt.Wkt}\n     * @memberof Wkt\n     */\n    Wkt.Wkt = function (initializer) {\n\n        /**\n         * The default delimiter between X and Y coordinates.\n         * @ignore\n         */\n        this.delimiter = Wkt.delimiter || ' ';\n\n        /**\n         * Configuration parameter for controlling how Wicket seralizes\n         * MULTIPOINT strings. Examples; both are valid WKT:\n         * If true: MULTIPOINT((30 10),(10 30),(40 40))\n         * If false: MULTIPOINT(30 10,10 30,40 40)\n         * @ignore\n         */\n        this.wrapVertices = true;\n\n        /**\n         * Some regular expressions copied from OpenLayers.Format.WKT.js\n         * @ignore\n         */\n        this.regExes = {\n            'typeStr': /^\\s*(\\w+)\\s*\\(\\s*(.*)\\s*\\)\\s*$/,\n            'spaces': /\\s+|\\+/, // Matches the '+' or the empty space\n            'numeric': /-*\\d+(\\.*\\d+)?/,\n            'comma': /\\s*,\\s*/,\n            'parenComma': /\\)\\s*,\\s*\\(/,\n            'coord': /-*\\d+\\.*\\d+ -*\\d+\\.*\\d+/, // e.g. \"24 -14\"\n            'doubleParenComma': /\\)\\s*\\)\\s*,\\s*\\(\\s*\\(/,\n            'ogcTypes': /^(multi)?(point|line|polygon|box)?(string)?$/i, // Captures e.g. \"Multi\",\"Line\",\"String\"\n            'crudeJson': /^{.*\"(type|coordinates|geometries|features)\":.*}$/ // Attempts to recognize JSON strings\n        };\n\n        /**\n         * Strip any whitespace and parens from front and back.\n         * This is the equivalent of s/^\\s*\\(?(.*)\\)?\\s*$/$1/ but without the risk of catastrophic backtracking.\n         * @param   str {String}\n         */\n        this._stripWhitespaceAndParens = function (fullStr) {\n            var trimmed = fullStr.trim();\n            var noParens = trimmed.replace(/^\\(?(.*?)\\)?$/, '$1');\n            return noParens;\n        };\n\n        /**\n         * The internal representation of geometry--the \"components\" of geometry.\n         * @ignore\n         */\n        this.components = undefined;\n\n        // An initial WKT string may be provided\n        if (initializer && typeof initializer === 'string') {\n            this.read(initializer);\n        } else if (initializer && typeof initializer !== undefined) {\n            this.fromObject(initializer);\n        }\n\n    };\n\n\n\n    /**\n     * Returns true if the internal geometry is a collection of geometries.\n     * @return  {Boolean}   Returns true when it is a collection\n     * @memberof this.Wkt.Wkt\n     * @method\n     */\n    Wkt.Wkt.prototype.isCollection = function () {\n        switch (this.type.slice(0, 5)) {\n            case 'multi':\n                // Trivial; any multi-geometry is a collection\n                return true;\n            case 'polyg':\n                // Polygons with holes are \"collections\" of rings\n                return true;\n            default:\n                // Any other geometry is not a collection\n                return false;\n        }\n    };\n\n    /**\n     * Compares two x,y coordinates for equality.\n     * @param   a   {Object}    An object with x and y properties\n     * @param   b   {Object}    An object with x and y properties\n     * @return      {Boolean}\n     * @memberof this.Wkt.Wkt\n     * @method\n     */\n    Wkt.Wkt.prototype.sameCoords = function (a, b) {\n        return (a.x === b.x && a.y === b.y);\n    };\n\n    /**\n     * Sets internal geometry (components) from framework geometry (e.g.\n     * Google Polygon objects or google.maps.Polygon).\n     * @param   obj {Object}    The framework-dependent geometry representation\n     * @return      {this.Wkt.Wkt}   The object itself\n     * @memberof this.Wkt.Wkt\n     * @method\n     */\n    Wkt.Wkt.prototype.fromObject = function (obj) {\n        var result;\n\n        if (obj.hasOwnProperty('type') && obj.hasOwnProperty('coordinates')) {\n            result = this.fromJson(obj);\n        } else {\n            result = this.deconstruct.call(this, obj);\n        }\n\n        this.components = result.components;\n        this.isRectangle = result.isRectangle || false;\n        this.type = result.type;\n        return this;\n    };\n\n    /**\n     * Creates external geometry objects based on a plug-in framework's\n     * construction methods and available geometry classes.\n     * @param   config  {Object}    An optional framework-dependent properties specification\n     * @return          {Object}    The framework-dependent geometry representation\n     * @memberof this.Wkt.Wkt\n     * @method\n     */\n    Wkt.Wkt.prototype.toObject = function (config) {\n        var obj = this.construct[this.type].call(this, config);\n        // Don't assign the \"properties\" property to an Array\n        if (typeof obj === 'object' && !Wkt.isArray(obj)) {\n            obj.properties = this.properties;\n        }\n        return obj;\n    };\n\n    /**\n     * Returns the WKT string representation; the same as the write() method.\n     * @memberof this.Wkt.Wkt\n     * @method\n     */\n    Wkt.Wkt.prototype.toString = function (config) {\n        return this.write();\n    };\n\n    /**\n     * Parses a JSON representation as an Object.\n     * @param\tobj\t{Object}\tAn Object with the GeoJSON schema\n     * @return\t{this.Wkt.Wkt}\tThe object itself\n     * @memberof this.Wkt.Wkt\n     * @method\n     */\n    Wkt.Wkt.prototype.fromJson = function (obj) {\n        var i, j, k, coords, iring, oring;\n\n        this.type = obj.type.toLowerCase();\n        this.components = [];\n        if (obj.hasOwnProperty('geometry')) { //Feature\n            this.fromJson(obj.geometry);\n            this.properties = obj.properties;\n            return this;\n        }\n        coords = obj.coordinates;\n\n        if (!Wkt.isArray(coords[0])) { // Point\n            this.components.push({\n                x: coords[0],\n                y: coords[1]\n            });\n\n        } else {\n\n            for (i in coords) {\n                if (coords.hasOwnProperty(i)) {\n\n                    if (!Wkt.isArray(coords[i][0])) { // LineString\n\n                        if (this.type === 'multipoint') { // MultiPoint\n                            this.components.push([{\n                                x: coords[i][0],\n                                y: coords[i][1]\n                            }]);\n\n                        } else {\n                            this.components.push({\n                                x: coords[i][0],\n                                y: coords[i][1]\n                            });\n\n                        }\n\n                    } else {\n\n                        oring = [];\n                        for (j in coords[i]) {\n                            if (coords[i].hasOwnProperty(j)) {\n\n                                if (!Wkt.isArray(coords[i][j][0])) {\n                                    oring.push({\n                                        x: coords[i][j][0],\n                                        y: coords[i][j][1]\n                                    });\n\n                                } else {\n\n                                    iring = [];\n                                    for (k in coords[i][j]) {\n                                        if (coords[i][j].hasOwnProperty(k)) {\n\n                                            iring.push({\n                                                x: coords[i][j][k][0],\n                                                y: coords[i][j][k][1]\n                                            });\n\n                                        }\n                                    }\n\n                                    oring.push(iring);\n\n                                }\n\n                            }\n                        }\n\n                        this.components.push(oring);\n                    }\n                }\n            }\n\n        }\n\n        return this;\n    };\n\n    /**\n     * Creates a JSON representation, with the GeoJSON schema, of the geometry.\n     * @return    {Object}    The corresponding GeoJSON representation\n     * @memberof this.Wkt.Wkt\n     * @method\n     */\n    Wkt.Wkt.prototype.toJson = function () {\n        var cs, json, i, j, k, ring, rings;\n\n        cs = this.components;\n        json = {\n            coordinates: [],\n            type: (function () {\n                var i, type, s;\n\n                type = this.regExes.ogcTypes.exec(this.type).slice(1);\n                s = [];\n\n                for (i in type) {\n                    if (type.hasOwnProperty(i)) {\n                        if (type[i] !== undefined) {\n                            s.push(type[i].toLowerCase().slice(0, 1).toUpperCase() + type[i].toLowerCase().slice(1));\n                        }\n                    }\n                }\n\n                return s;\n            }.call(this)).join('')\n        }\n\n        // Wkt BOX type gets a special bbox property in GeoJSON\n        if (this.type.toLowerCase() === 'box') {\n            json.type = 'Polygon';\n            json.bbox = [];\n\n            for (i in cs) {\n                if (cs.hasOwnProperty(i)) {\n                    json.bbox = json.bbox.concat([cs[i].x, cs[i].y]);\n                }\n            }\n\n            json.coordinates = [\n                [\n                    [cs[0].x, cs[0].y],\n                    [cs[0].x, cs[1].y],\n                    [cs[1].x, cs[1].y],\n                    [cs[1].x, cs[0].y],\n                    [cs[0].x, cs[0].y]\n                ]\n            ];\n\n            return json;\n        }\n\n        // For the coordinates of most simple features\n        for (i in cs) {\n            if (cs.hasOwnProperty(i)) {\n\n                // For those nested structures\n                if (Wkt.isArray(cs[i])) {\n                    rings = [];\n\n                    for (j in cs[i]) {\n                        if (cs[i].hasOwnProperty(j)) {\n\n                            if (Wkt.isArray(cs[i][j])) { // MULTIPOLYGONS\n                                ring = [];\n\n                                for (k in cs[i][j]) {\n                                    if (cs[i][j].hasOwnProperty(k)) {\n                                        ring.push([cs[i][j][k].x, cs[i][j][k].y]);\n                                    }\n                                }\n\n                                rings.push(ring);\n\n                            } else { // POLYGONS and MULTILINESTRINGS\n\n                                if (cs[i].length > 1) {\n                                    rings.push([cs[i][j].x, cs[i][j].y]);\n\n                                } else { // MULTIPOINTS\n                                    rings = rings.concat([cs[i][j].x, cs[i][j].y]);\n                                }\n                            }\n                        }\n                    }\n\n                    json.coordinates.push(rings);\n\n                } else {\n                    if (cs.length > 1) { // For LINESTRING type\n                        json.coordinates.push([cs[i].x, cs[i].y]);\n\n                    } else { // For POINT type\n                        json.coordinates = json.coordinates.concat([cs[i].x, cs[i].y]);\n                    }\n                }\n\n            }\n        }\n\n        return json;\n    };\n\n    /**\n     * Absorbs the geometry of another this.Wkt.Wkt instance, merging it with its own,\n     * creating a collection (MULTI-geometry) based on their types, which must agree.\n     * For example, creates a MULTIPOLYGON from a POLYGON type merged with another\n     * POLYGON type, or adds a POLYGON instance to a MULTIPOLYGON instance.\n     * @param   wkt {String}    A Wkt.Wkt object\n     * @return\t{this.Wkt.Wkt}\tThe object itself\n     * @memberof this.Wkt.Wkt\n     * @method\n     */\n    Wkt.Wkt.prototype.merge = function (wkt) {\n        var prefix = this.type.slice(0, 5);\n\n        if (this.type !== wkt.type) {\n            if (this.type.slice(5, this.type.length) !== wkt.type) {\n                throw TypeError('The input geometry types must agree or the calling this.Wkt.Wkt instance must be a multigeometry of the other');\n            }\n        }\n\n        switch (prefix) {\n\n            case 'point':\n                this.components = [this.components.concat(wkt.components)];\n                break;\n\n            case 'multi':\n                this.components = this.components.concat((wkt.type.slice(0, 5) === 'multi') ? wkt.components : [wkt.components]);\n                break;\n\n            default:\n                this.components = [\n                    this.components,\n                    wkt.components\n                ];\n                break;\n\n        }\n\n        if (prefix !== 'multi') {\n            this.type = 'multi' + this.type;\n        }\n        return this;\n    };\n\n    /**\n     * Reads a WKT string, validating and incorporating it.\n     * @param   str {String}    A WKT or GeoJSON string\n     * @return\t{this.Wkt.Wkt}\tThe object itself\n     * @memberof this.Wkt.Wkt\n     * @method\n     */\n    Wkt.Wkt.prototype.read = function (str) {\n        var matches;\n        matches = this.regExes.typeStr.exec(str);\n        if (matches) {\n            this.type = matches[1].toLowerCase();\n            this.base = matches[2];\n            if (this.ingest[this.type]) {\n                this.components = this.ingest[this.type].apply(this, [this.base]);\n            }\n\n        } else {\n            if (this.regExes.crudeJson.test(str)) {\n                if (typeof JSON === 'object' && typeof JSON.parse === 'function') {\n                    this.fromJson(JSON.parse(str));\n\n                } else {\n                    console.log('JSON.parse() is not available; cannot parse GeoJSON strings');\n                    throw {\n                        name: 'JSONError',\n                        message: 'JSON.parse() is not available; cannot parse GeoJSON strings'\n                    };\n                }\n\n            } else {\n                console.log('Invalid WKT string provided to read()');\n                throw {\n                    name: 'WKTError',\n                    message: 'Invalid WKT string provided to read()'\n                };\n            }\n        }\n\n        return this;\n    }; // eo readWkt\n\n    /**\n     * Writes a WKT string.\n     * @param   components  {Array}     An Array of internal geometry objects\n     * @return              {String}    The corresponding WKT representation\n     * @memberof this.Wkt.Wkt\n     * @method\n     */\n    Wkt.Wkt.prototype.write = function (components) {\n        var i, pieces, data;\n\n        components = components || this.components;\n\n        pieces = [];\n\n        pieces.push(this.type.toUpperCase() + '(');\n\n        for (i = 0; i < components.length; i += 1) {\n            if (this.isCollection() && i > 0) {\n                pieces.push(',');\n            }\n\n            // There should be an extract function for the named type\n            if (!this.extract[this.type]) {\n                return null;\n            }\n\n            data = this.extract[this.type].apply(this, [components[i]]);\n            if (this.isCollection() && this.type !== 'multipoint') {\n                pieces.push('(' + data + ')');\n\n            } else {\n                pieces.push(data);\n\n                // If not at the end of the components, add a comma\n                if (i !== (components.length - 1) && this.type !== 'multipoint') {\n                    pieces.push(',');\n                }\n\n            }\n        }\n\n        pieces.push(')');\n\n        return pieces.join('');\n    };\n\n    /**\n     * This object contains functions as property names that extract WKT\n     * strings from the internal representation.\n     * @memberof this.Wkt.Wkt\n     * @namespace this.Wkt.Wkt.extract\n     * @instance\n     */\n    Wkt.Wkt.prototype.extract = {\n        /**\n         * Return a WKT string representing atomic (point) geometry\n         * @param   point   {Object}    An object with x and y properties\n         * @return          {String}    The WKT representation\n         * @memberof this.Wkt.Wkt.extract\n         * @instance\n         */\n        point: function (point) {\n            return String(point.x) + this.delimiter + String(point.y);\n        },\n\n        /**\n         * Return a WKT string representing multiple atoms (points)\n         * @param   multipoint  {Array}     Multiple x-and-y objects\n         * @return              {String}    The WKT representation\n         * @memberof this.Wkt.Wkt.extract\n         * @instance\n         */\n        multipoint: function (multipoint) {\n            var i, parts = [],\n                s;\n\n            for (i = 0; i < multipoint.length; i += 1) {\n                s = this.extract.point.apply(this, [multipoint[i]]);\n\n                if (this.wrapVertices) {\n                    s = '(' + s + ')';\n                }\n\n                parts.push(s);\n            }\n\n            return parts.join(',');\n        },\n\n        /**\n         * Return a WKT string representing a chain (linestring) of atoms\n         * @param   linestring  {Array}     Multiple x-and-y objects\n         * @return              {String}    The WKT representation\n         * @memberof this.Wkt.Wkt.extract\n         * @instance\n         */\n        linestring: function (linestring) {\n            // Extraction of linestrings is the same as for points\n            return this.extract.point.apply(this, [linestring]);\n        },\n\n        /**\n         * Return a WKT string representing multiple chains (multilinestring) of atoms\n         * @param   multilinestring {Array}     Multiple of multiple x-and-y objects\n         * @return                  {String}    The WKT representation\n         * @memberof this.Wkt.Wkt.extract\n         * @instance\n         */\n        multilinestring: function (multilinestring) {\n            var i, parts = [];\n\n            if (multilinestring.length) {\n                for (i = 0; i < multilinestring.length; i += 1) {\n                    parts.push(this.extract.linestring.apply(this, [multilinestring[i]]));\n                }\n            } else {\n                parts.push(this.extract.point.apply(this, [multilinestring]));\n            }\n\n            return parts.join(',');\n        },\n\n        /**\n         * Return a WKT string representing multiple atoms in closed series (polygon)\n         * @param   polygon {Array}     Collection of ordered x-and-y objects\n         * @return          {String}    The WKT representation\n         * @memberof this.Wkt.Wkt.extract\n         * @instance\n         */\n        polygon: function (polygon) {\n            // Extraction of polygons is the same as for multilinestrings\n            return this.extract.multilinestring.apply(this, [polygon]);\n        },\n\n        /**\n         * Return a WKT string representing multiple closed series (multipolygons) of multiple atoms\n         * @param   multipolygon    {Array}     Collection of ordered x-and-y objects\n         * @return                  {String}    The WKT representation\n         * @memberof this.Wkt.Wkt.extract\n         * @instance\n         */\n        multipolygon: function (multipolygon) {\n            var i, parts = [];\n            for (i = 0; i < multipolygon.length; i += 1) {\n                parts.push('(' + this.extract.polygon.apply(this, [multipolygon[i]]) + ')');\n            }\n            return parts.join(',');\n        },\n\n        /**\n         * Return a WKT string representing a 2DBox\n         * @param   multipolygon    {Array}     Collection of ordered x-and-y objects\n         * @return                  {String}    The WKT representation\n         * @memberof this.Wkt.Wkt.extract\n         * @instance\n         */\n        box: function (box) {\n            return this.extract.linestring.apply(this, [box]);\n        },\n\n        geometrycollection: function (str) {\n            console.log('The geometrycollection WKT type is not yet supported.');\n        }\n    };\n\n    /**\n     * This object contains functions as property names that ingest WKT\n     * strings into the internal representation.\n     * @memberof this.Wkt.Wkt\n     * @namespace this.Wkt.Wkt.ingest\n     * @instance\n     */\n    Wkt.Wkt.prototype.ingest = {\n\n        /**\n         * Return point feature given a point WKT fragment.\n         * @param   str {String}    A WKT fragment representing the point\n         * @memberof this.Wkt.Wkt.ingest\n         * @instance\n         */\n        point: function (str) {\n            var coords = Wkt.trim(str).split(this.regExes.spaces);\n            // In case a parenthetical group of coordinates is passed...\n            return [{ // ...Search for numeric substrings\n                x: parseFloat(this.regExes.numeric.exec(coords[0])[0]),\n                y: parseFloat(this.regExes.numeric.exec(coords[1])[0])\n            }];\n        },\n\n        /**\n         * Return a multipoint feature given a multipoint WKT fragment.\n         * @param   str {String}    A WKT fragment representing the multipoint\n         * @memberof this.Wkt.Wkt.ingest\n         * @instance\n         */\n        multipoint: function (str) {\n            var i, components, points;\n            components = [];\n            points = Wkt.trim(str).split(this.regExes.comma);\n            for (i = 0; i < points.length; i += 1) {\n                components.push(this.ingest.point.apply(this, [points[i]]));\n            }\n            return components;\n        },\n\n        /**\n         * Return a linestring feature given a linestring WKT fragment.\n         * @param   str {String}    A WKT fragment representing the linestring\n         * @memberof this.Wkt.Wkt.ingest\n         * @instance\n         */\n        linestring: function (str) {\n            var i, multipoints, components;\n\n            // In our x-and-y representation of components, parsing\n            //  multipoints is the same as parsing linestrings\n            multipoints = this.ingest.multipoint.apply(this, [str]);\n\n            // However, the points need to be joined\n            components = [];\n            for (i = 0; i < multipoints.length; i += 1) {\n                components = components.concat(multipoints[i]);\n            }\n            return components;\n        },\n\n        /**\n         * Return a multilinestring feature given a multilinestring WKT fragment.\n         * @param   str {String}    A WKT fragment representing the multilinestring\n         * @memberof this.Wkt.Wkt.ingest\n         * @instance\n         */\n        multilinestring: function (str) {\n            var i, components, line, lines;\n            components = [];\n\n            lines = Wkt.trim(str).split(this.regExes.doubleParenComma);\n            if (lines.length === 1) { // If that didn't work...\n                lines = Wkt.trim(str).split(this.regExes.parenComma);\n            }\n\n            for (i = 0; i < lines.length; i += 1) {\n                line = this._stripWhitespaceAndParens(lines[i]);\n                components.push(this.ingest.linestring.apply(this, [line]));\n            }\n\n            return components;\n        },\n\n        /**\n         * Return a polygon feature given a polygon WKT fragment.\n         * @param   str {String}    A WKT fragment representing the polygon\n         * @memberof this.Wkt.Wkt.ingest\n         * @instance\n         */\n        polygon: function (str) {\n            var i, j, components, subcomponents, ring, rings;\n            rings = Wkt.trim(str).split(this.regExes.parenComma);\n            components = []; // Holds one or more rings\n            for (i = 0; i < rings.length; i += 1) {\n                ring = this._stripWhitespaceAndParens(rings[i]).split(this.regExes.comma);\n                subcomponents = []; // Holds the outer ring and any inner rings (holes)\n                for (j = 0; j < ring.length; j += 1) {\n                    // Split on the empty space or '+' character (between coordinates)\n                    var split = ring[j].split(this.regExes.spaces);\n                    if (split.length > 2) {\n                        //remove the elements which are blanks\n                        split = split.filter(function (n) {\n                            return n != \"\"\n                        });\n                    }\n                    if (split.length === 2) {\n                        var x_cord = split[0];\n                        var y_cord = split[1];\n\n                        //now push\n                        subcomponents.push({\n                            x: parseFloat(x_cord),\n                            y: parseFloat(y_cord)\n                        });\n                    }\n                }\n                components.push(subcomponents);\n            }\n            return components;\n        },\n\n        /**\n         * Return box vertices (which would become the Rectangle bounds) given a Box WKT fragment.\n         * @param   str {String}    A WKT fragment representing the box\n         * @memberof this.Wkt.Wkt.ingest\n         * @instance\n         */\n        box: function (str) {\n            var i, multipoints, components;\n\n            // In our x-and-y representation of components, parsing\n            //  multipoints is the same as parsing linestrings\n            multipoints = this.ingest.multipoint.apply(this, [str]);\n\n            // However, the points need to be joined\n            components = [];\n            for (i = 0; i < multipoints.length; i += 1) {\n                components = components.concat(multipoints[i]);\n            }\n\n            return components;\n        },\n\n        /**\n         * Return a multipolygon feature given a multipolygon WKT fragment.\n         * @param   str {String}    A WKT fragment representing the multipolygon\n         * @memberof this.Wkt.Wkt.ingest\n         * @instance\n         */\n        multipolygon: function (str) {\n            var i, components, polygon, polygons;\n            components = [];\n            polygons = Wkt.trim(str).split(this.regExes.doubleParenComma);\n            for (i = 0; i < polygons.length; i += 1) {\n                polygon = this._stripWhitespaceAndParens(polygons[i]);\n                components.push(this.ingest.polygon.apply(this, [polygon]));\n            }\n            return components;\n        },\n\n        /**\n         * Return an array of features given a geometrycollection WKT fragment.\n         * @param   str {String}    A WKT fragment representing the geometry collection\n         * @memberof this.Wkt.Wkt.ingest\n         * @instance\n         */\n        geometrycollection: function (str) {\n            console.log('The geometrycollection WKT type is not yet supported.');\n        }\n\n    }; // eo ingest\n\n    return Wkt;\n}));\n","/* \r\n * ***************************************************\r\n * \r\n * cismet GmbH, Saarbruecken, Germany\r\n * \r\n *               ... and it just works.\r\n * \r\n * ***************************************************\r\n */\r\n\r\nimport Wkt from 'wicket';\r\nimport log from 'loglevel';\r\n\r\n/**\r\n * Be aware of the difference between default and named exports. It is a common source of mistakes.\r\n * We suggest that you stick to using default imports and exports when a module only exports a single thing (for example, a component). \r\n * That’s what you get when you use export default Button and import Button from './Button'.\r\n * Named exports are useful for utility modules that export several functions. A module may have at most one default export and as many named exports as you like.\r\n * \r\n * See https://stackoverflow.com/questions/36795819/when-should-i-use-curly-braces-for-es6-import/36796281#36796281\r\n */\r\n\r\n/**\r\n * Helpers for cSIS API\r\n * \r\n * @author Pascal Dihé\r\n */\r\nexport default class CSISHelpers {\r\n  /**\r\n    * Drupal JSON API 'deeply' includes objects, e.g. &include=field_references are provided only once in a separate array name 'included'.\r\n    * This method resolves the references and extracts the included  object.\r\n    * \r\n    * @param {string} type \r\n    * @param {number} id \r\n    * @param {boolean} includedArray \r\n    * @see https://www.drupal.org/docs/8/modules/jsonapi/includes\r\n   */\r\n  static getIncludedObject(type, id, includedArray) {\r\n    if (type != null && id != null) {\r\n      for (let i = 0; i < includedArray.length; ++i) {\r\n        if (includedArray[i].type === type && includedArray[i].id === id) {\r\n          return includedArray[i];\r\n        }\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Retrieves the EMIKAT Study / Scenario ID from the Drupal Study\r\n   * \r\n   * @param {Object} studyGroupNode\r\n   * @return {Number}\r\n   */\r\n  static extractEmikatIdFromStudyGroupNode(studyGroupNode) {\r\n\r\n    let emikatId = -1;\r\n    if (studyGroupNode.attributes.field_emikat_id !== undefined && studyGroupNode.attributes.field_emikat_id != null\r\n      && !isNaN(studyGroupNode.attributes.field_emikat_id)) {\r\n      emikatId = parseInt(studyGroupNode.attributes.field_emikat_id, 10);\r\n    } else {\r\n      log.warn('no emikat id in study ' + studyGroupNode.attributes.field_emikat_id);\r\n    }\r\n\r\n    return emikatId;\r\n  }\r\n\r\n  /**\r\n   * Returns the JSON representation of the study area.\r\n   * \r\n   * @param {Object} studyGroupNode \r\n   * @returns {JSON}\r\n   */\r\n  static extractStudyAreaFromStudyGroupNode(studyGroupNode) {\r\n    /**\r\n     * @type {Wkt}\r\n     */\r\n    let studyArea = new Wkt.Wkt();\r\n\r\n    if (studyGroupNode.attributes.field_area != null && studyGroupNode.attributes.field_area.value != null) {\r\n      studyArea.read(studyGroupNode.attributes.field_area.value);\r\n    } else {\r\n      log.warn('no study area in study ' + studyGroupNode);\r\n    }\r\n\r\n    const studyAreaJson = studyArea.toJson();\r\n    return studyAreaJson;\r\n  }\r\n\r\n  /**\r\n   * Filters resource array by tag id/name which are included in the tags array (due to Drupal API quirks).\r\n   * \r\n   * @param {Object[]} resourceArray the original resource array\r\n   * @param {Object[]} tagsArray included objects - Drupal APi style! :-/\r\n   * @param {string} tagType The tag type, e.g. 'taxonomy_term--eu_gl'\r\n   * @param {string} tagName The name of the tag, e.g.'eu-gl:hazard-characterization:local-effects'\r\n   * @return {Object[]}\r\n   * @see getIncludedObject()\r\n   */\r\n  static filterResourcesbyTagName(resourceArray, tagsArray, tagType, tagName) {\r\n    /**\r\n     * If we request exactly **one** resource, there would be a possibility for simplification that applies to all taxonomy terms and tags: \r\n     * Instead of looking at `resource.relationships.field_resource_tags.data` we just have to search in `tagsArray` (included objects, respectively).\r\n     */\r\n    let filteredResourceArray = resourceArray.filter((resource) => {\r\n      if (resource.relationships.field_resource_tags != null && resource.relationships.field_resource_tags.data != null\r\n        && resource.relationships.field_resource_tags.data.length > 0) {\r\n        return resource.relationships.field_resource_tags.data.some((tagReference) => {\r\n          return tagReference.type === tagType ? tagsArray.some((tagObject) => {\r\n            return (tagReference.type === tagObject.type && tagReference.id === tagObject.id && tagObject.attributes.name === tagName);\r\n          }) : false;\r\n        });\r\n      } else {\r\n        log.warn('no tags found  in resource ' + resource.id)\r\n      }\r\n\r\n      return false;\r\n\r\n    });\r\n    log.debug(filteredResourceArray.length + ' resources left after filtering ' + resourceArray.length\r\n      + ' resources by tag type ' + tagType + ' and tag name ' + tagName);\r\n\r\n    return filteredResourceArray;\r\n  }\r\n\r\n  /**\r\n     * Filters resource array by reference type which are included in the references array (due to Drupal API quirks).\r\n     * \r\n     * @param {Object[]} resourceArray the original resource array\r\n     * @param {Object[]} referencesArray included objects - Drupal APi style! :-/\r\n     * @param {string} referenceType The reference type, e.g. '@mapview:ogc:wms'\r\n     * @return {Object[]}\r\n     * @see getIncludedObject()\r\n     */\r\n  static filterResourcesbyReferenceType(resourceArray, referencesArray, referenceType) {\r\n    let filteredResourceArray = resourceArray.filter((resource) => {\r\n      if (resource.relationships.field_references != null && resource.relationships.field_references.data != null\r\n        && resource.relationships.field_references.data.length > 0) {\r\n        return resource.relationships.field_references.data.some((referenceReference) => {\r\n          return referencesArray.some((referenceObject) => {\r\n            return (referenceReference.type === referenceObject.type && referenceReference.id === referenceObject.id\r\n              && referenceObject.attributes.field_reference_type === referenceType);\r\n          });\r\n        });\r\n      } else {\r\n        log.warn('no references found  in resource ' + resource.id)\r\n      }\r\n\r\n      return false;\r\n\r\n    });\r\n    // ES6 template string: https://eslint.org/docs/rules/no-template-curly-in-string\r\n    log.debug(`${filteredResourceArray.length} resources left after filtering ${resourceArray.length} resources by reference type ${referenceType}`);\r\n\r\n    return filteredResourceArray;\r\n  }\r\n  /**\r\n      * Extracts references which are included in the references array (due to Drupal API quirks) from a resource\r\n      * \r\n      * @param {Object} resource the original resource\r\n      * @param {Object[]} referencesArray included objects - Drupal APi style! :-/\r\n      * @param {string} referenceType The reference type, e.g. '@mapview:ogc:wms'\r\n      * @return {Object[]}\r\n      * @see getIncludedObject()\r\n      */\r\n  static extractReferencesfromResource(resource, referencesArray, referenceType) {\r\n    let references = [];\r\n    // the reference type is avialble only at the level of the `included` array\r\n    if (resource.relationships.field_references != null && resource.relationships.field_references.data != null\r\n      && resource.relationships.field_references.data.length > 0) {\r\n      references = resource.relationships.field_references.data.flatMap((referenceReference) => {\r\n        let filteredReferences = referencesArray.filter((referenceObject) => {\r\n          return (referenceReference.type === referenceObject.type && referenceReference.id === referenceObject.id\r\n            && referenceObject.attributes.field_reference_type === referenceType);\r\n        });\r\n        return filteredReferences;\r\n      });\r\n    }\r\n    log.debug(`${references.length} references found in resouce for reference type ${referenceType}`);\r\n    return references;\r\n  }\r\n\r\n  /**\r\n      * Extracts tags which are included in the tags array (due to Drupal API quirks) from a resource\r\n      * \r\n      * @param {Object} resource the original resource\r\n      * @param {Object[]} tagsArray included objects - Drupal APi style! :-/\r\n      * @param {string} tagType The tag type, e.g. '@mapview:ogc:wms'\r\n      * @return {Object[]}\r\n      * @see getIncludedObject()\r\n      */\r\n  static extractTagsfromResource(resource, tagsArray, tagType) {\r\n    let tags = [];\r\n    if (resource.relationships.field_resource_tags != null && resource.relationships.field_resource_tags.data != null\r\n      && resource.relationships.field_resource_tags.data.length > 0) {\r\n      tags = resource.relationships.field_resource_tags.data.flatMap(tagReference => {\r\n        return tagReference.type === tagType ? tagsArray.filter(tagObject => tagReference.type === tagObject.type && tagReference.id === tagObject.id) : [];\r\n      });\r\n    }\r\n    log.debug(`${tags.length} tags found in resouce for tag type ${tagType}`);\r\n    return tags;\r\n  }\r\n}\r\n\r\n/**\r\n * We can either use \"import CSISHelpers from './CSISHelpers.js'\" and call  \"CSISHelpers.getIncludedObject(...)\" or\r\n * \"import {getIncludedObject} from './CSISHelpers.js'\" and call \"getIncludedObject(...)\".\r\n * \r\n * However, It is not recommended to mix default exports with “named” exports. \r\n * See https://www.kaplankomputing.com/blog/tutorials/javascript/understanding-imports-exports-es6/\r\n */\r\n\r\nexport const extractEmikatIdFromStudyGroupNode = CSISHelpers.extractEmikatIdFromStudyGroupNode\r\nexport const getIncludedObject = CSISHelpers.getIncludedObject;\r\nexport const filterResourcesbyTagName = CSISHelpers.filterResourcesbyTagName;\r\nexport const filterResourcesbyReferenceType = CSISHelpers.filterResourcesbyReferenceType;\r\nexport const extractReferencesfromResource = CSISHelpers.extractReferencesfromResource;\r\nexport const extractTagsfromResource = CSISHelpers.extractTagsfromResource;\r\nexport const extractStudyAreaFromStudyGroupNode = CSISHelpers.extractStudyAreaFromStudyGroupNode;"],"names":["csisClient","axios","create","credentials","defaults","headers","common","getXCsrfToken","csisBaseUrl","get","apiResponse","post","data","getEmikatCredentialsFromCsis","meta","links","me","href","userResponse","attributes","field_basic_auth_credentials","btoa","log","error","name","console","getStudyGroupNodeFromCsis","studyUuid","include","requestUrl","debug","EMIKAT_STUDY_ID","emikatClient","fetchData","url","emikatCredentials","Authorization","response","fetchUsers","authString","addEmikatId","urlTemplate","emikatId","replace","generateColumns","columnnames","map","columnname","index","id","Header","accessor","row","values","sum","a","b","this","CSISHelpers","type","includedArray","i","length","studyGroupNode","field_emikat_id","undefined","isNaN","parseInt","warn","studyArea","Wkt","field_area","value","read","studyAreaJson","toJson","resourceArray","tagsArray","tagType","tagName","filteredResourceArray","filter","resource","relationships","field_resource_tags","some","tagReference","tagObject","referencesArray","referenceType","field_references","referenceReference","referenceObject","field_reference_type","references","flatMap","filteredReferences","tags","extractEmikatIdFromStudyGroupNode","getIncludedObject","filterResourcesbyTagName","filterResourcesbyReferenceType","extractReferencesfromResource","extractTagsfromResource","extractStudyAreaFromStudyGroupNode"],"mappings":"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"}